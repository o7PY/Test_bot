#!/usr/bin/env python3

import rclpy
from rclpy.node import Node
from geometry_msgs.msg import Twist

class CmdVelPublisher(Node):
    def __init__(self):
        super().__init__('cmd_vel_publisher')
        self.publisher_ = self.create_publisher(Twist, '/diff_cont/cmd_vel_unstamped', 10)
        self.timer = self.create_timer(0.5, self.publish_velocity)
        self.get_logger().info('cmd_vel publisher node has been started.')

    def publish_velocity(self):
        twist_msg = Twist()

        twist_msg.linear.x = 0.2  # Move forward
        twist_msg.angular.z = 0.2  # Turn

        # Publish the velocity message
        self.publisher_.publish(twist_msg)

        # Log the action
        self.get_logger().info('Published: linear.x = %.2f, angular.z = %.2f' %
                               (twist_msg.linear.x, twist_msg.angular.z))

def main(args=None):
    rclpy.init(args=args)

    # Create an instance of the CmdVelPublisher
    cmd_vel_publisher = CmdVelPublisher()

    # Keep the node alive until it's interrupted (Ctrl+C)
    rclpy.spin(cmd_vel_publisher)

    # Shutdown the node after stopping
    cmd_vel_publisher.destroy_node()
    rclpy.shutdown()

if __name__ == '__main__':
    main()
